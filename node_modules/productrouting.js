var express = require('express');
var router = express.Router();
var sqlhelper = require('mysqlhelper2');
var cfg = require('config');

///////////////////////route "/admin/product/list" ////////////////////////////////////////////////
router.get("/product/list.html", function (req, resp) {
    sqlhelper.pool.query("SELECT * FROM `products` WHERE `deleted`=0", function (err, rows, fields) {
        //on initialise un tableau dont le nom de la variable est egal à liste_produits, ainsi meme si on ne recupere rien à l'interieur a cause d'une erreur ou qu'il y ai rien dans la bdd
        //La page "/product/list.html" s'affichera toujours
        var liste_produits={};
        //function qui renvoie une erreur si il y a un probleme
        // on verifie dans la console le valeur de err pour voir si il y a une erreur
        //console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            //message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            //console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            //message = "La recuperation des données c'est bien passé ";
            //on log pour voir le mesage si il passe
            //console.log('message bien reussi avec le message : ' + message);
            //console.log('Tous les produits: '+JSON.stringify(rows));
            liste_produits = rows;
            //si le user enregistré en session est different de nul (loggé)
                if (typeof req.user !== 'undefined') {
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                    resp.render("admin/tables.html.twig", { "username": req.user.username, "produits": liste_produits});
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }
            }  
    });
});

///////////////////////route "/admin/product/list" ////////////////////////////////////////////////
router.get("/product/update/:id", function (req, resp) {

   //on recupere l'id du l'url comme pointeur du produit a utiliser
   var id = req.params.id;
    //Alors on passe second query pour la modification d'un produit recuperer par son id
        sqlhelper.pool.query("SELECT * FROM `products` WHERE `id`=? ",[id], function (err, rows, fields) {
            //function qui renvoie une erreur si il y a un probleme
            // on verifie dans la console le valeur de err pour voir si il y a une erreur
            //console.log("err :" + err);
            //si il y a une erreur donc si la valeur err est differente de null
            if (err != null) {
                //on enregistre le message d'erreur'
                //message = "Il y a eu une erreur dans la query";
                //on log pour voir le mesage si il passe
                //console.log(message + ' ----- ' + err);
            }
            else {
                //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                //message = "La recuperation des données c'est bien passé ";
                //on log pour voir le mesage si il passe
                //console.log('message bien reussi avec le message : ' + message);
                //si le user enregistré en session est different de nul (typeof verifi le type de donné)
            if (typeof req.user !== 'undefined') {
                //console.log("Un produit 22:" + JSON.stringify(produit));
                //alors je renvoie le twig avec un tablo qui recupere les elements de username
                resp.render("admin/form.html.twig", { "username": req.user.username, "produits": rows });
            }
            //sinon je renvoie le user a la page login pour authentification
            else {
                resp.redirect("/login.html");
            }         
        }
    });   
});


///////////////////////route "/admin/product/update/id" post pour enregistrement ////////////////////////////////////////////////
router.post("/product/update/:id", function (req, resp) {


   var id = req.params.id;

    var label = req.body.label;
    var description = req.body.description;
    var ref = req.body.ref;
    var price = req.body.price;
    var picture = req.body.picture;
    var idvat = req.body.idvat;
    var stock = req.body.stock;
    console.log('id : '+id);
    console.log('label : '+label);
    console.log('description : '+description);
    console.log('ref : '+ref);
    console.log('prix : '+price);
    console.log('image : '+picture);
    console.log('tva : '+idvat);
    console.log('quantite magasin : '+stock);

    //UPDATE `products` SET `label` = ?, `description` = ?, `ref` = ?, `price` = ?, `picture` = ?, `idvat` = ?, `deleted` = '0', `stock` = ? WHERE `products`.`id` = ?
    //Alors on passe second query pour la modification d'un produit recuperer par son id
        sqlhelper.pool.query("UPDATE `products` SET `label` = ?, `description` = ?, `ref` = ?, `price` = ?, `picture` = ?, `idvat` = ?, `stock` = ? WHERE `id` = ?",[label,description,ref,price,picture,idvat,stock,id], function (err, rows, fields) {
            //function qui renvoie une erreur si il y a un probleme
            // on verifie dans la console le valeur de err pour voir si il y a une erreur
           // console.log("err :" + err);
            //si il y a une erreur donc si la valeur err est differente de null
            if (err != null) {
                //on enregistre le message d'erreur'
                message = "Il y a eu une erreur dans la query";
                //on log pour voir le mesage si il passe
                console.log(message + ' ----- ' + err);
            }
            else {
                //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                message = "La recuperation des données c'est bien passé ";
                //on log pour voir le mesage si il passe
                console.log('message bien reussi avec le message : ' + message);
                //on redirige vers la meme route pour voir les modifications
                resp.redirect("/admin/product/list.html");
                   
        }
    });   
});

///////////////////////route "/admin/product/list" ////////////////////////////////////////////////
router.get("/product/delette/:id", function (req, resp) {


   var id = req.params.id;
    //Alors on passe second query pour la modification d'un produit recuperer par son id
        sqlhelper.pool.query("UPDATE `products` SET `deleted` = '1' WHERE `products`.`id` = ? ",[id], function (err, rows, fields) {
            //function qui renvoie une erreur si il y a un probleme
            // on verifie dans la console le valeur de err pour voir si il y a une erreur
            //console.log("err :" + err);
            //si il y a une erreur donc si la valeur err est differente de null
            if (err != null) {
                //on enregistre le message d'erreur'
                //message = "Il y a eu une erreur dans la query";
                //on log pour voir le mesage si il passe
                //console.log(message + ' ----- ' + err);
            }
            else {
                //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                //message = "La recuperation des données c'est bien passé ";
                //on log pour voir le mesage si il passe
                //console.log('message bien reussi avec le message : ' + message);
                //si le user enregistré en session est different de nul (typeof verifi le type de donné)
            
                resp.redirect("/admin/product/list.html");
        }
    });   
});

///////////////////////route "/admin/product/add" ////////////////////////////////////////////////
router.get("/product/add", function (req, resp) {

    var label = "Vueillez inserer le nom";
    var description = "Vueillez inserer la description";
    var ref = "Vueillez inserer la reference";
    var price = "Vueillez inserer le prix";
    var picture = "Vueillez inserer l'image";
    var idvat = "Vueillez inserer la tva (de 1 à 5)";
    var stock = "Vueillez inserer le stock";
    var id = "";
    var url="/admin/product/add";

   

                if (typeof req.user !== 'undefined') {
                        //console.log("Un produit 22:" + JSON.stringify(produit));
                        //alors je renvoie le twig avec un tablo qui recupere les elements de username
                        resp.render("admin/form.html.twig", { "username": req.user.username, "label":label,"description":description,"ref":ref,"price":price,"picture":picture,"idvat":idvat,"stock":stock,"id":id,"url":url});
                    }
                    //sinon je renvoie le user a la page login pour authentification
                    else {
                        resp.redirect("/login.html");
                    }  
                     
        
});


///////////////////////route "/admin/product/add" ////////////////////////////////////////////////
router.post("/product/add", function (req, resp) {

    var label = req.body.label;
    var description = req.body.description;
    var ref = req.body.ref;
    var price = req.body.price;
    var picture = req.body.picture;
    var idvat = req.body.idvat;
    var stock = req.body.stock;
    var deleted = 0;
    var stockEntrepot = 100;
    var idFournisseur = 3;
    
    console.log('label : '+label);
    console.log('description : '+description);
    console.log('ref : '+ref);
    console.log('prix : '+price);
    console.log('image : '+picture);
    console.log('tva : '+idvat);
    console.log('quantite magasin : '+stock);

    //INSERT INTO `products` ( `label`, `description`, `ref`, `price`, `picture`, `idvat`, `deleted`, `stock`, `stockEntrepot`, `idFournisseur`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
    var sql ="INSERT INTO `products` ( `label`, `description`, `ref`, `price`, `picture`, `idvat`, `deleted`, `stock`, `stockEntrepot`, `idFournisseur`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
    
    sqlhelper.pool.query(sql,[label,description,ref,price,picture,idvat,deleted,stock,stockEntrepot,idFournisseur], function (err, rows, fields) {
            //function qui renvoie une erreur si il y a un probleme
            // on verifie dans la console le valeur de err pour voir si il y a une erreur
            //console.log("err :" + err);
            //si il y a une erreur donc si la valeur err est differente de null
            if (err != null) {
                //on enregistre le message d'erreur'
                //message = "Il y a eu une erreur dans la query";
                //on log pour voir le mesage si il passe
                //console.log(message + ' ----- ' + err);
            }
            else {

               
                    
                        resp.redirect("/admin/product/list.html");
                    
                }      
        });
        

});
// route pour l'ajout : "/admin/product/update/add"

//exportation du module fin de admin 
module.exports = router;