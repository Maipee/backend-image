var express = require('express');
var df = require('dateformat');
var passport = require('passport');
var router = express.Router();
var mysql = require('mysql');
var cfg = require('config');
var sqlhelper = require('mysqlhelper2');


//Route de gestion

router.get("/product/list.html", function (req,resp) {
		var listproducts={};

		sqlhelper.pool.query("SELECT * FROM products WHERE deleted='0'", function (err, rows, fields) {				
			if(err){
				console.log('Il y a une erreur'+err);	
				}
				else{
					listproducts=rows;
					}			
	resp.render("admin/products.html.twig",{"listproducts": listproducts});
	
	});
});


// route de delete product
router.get("/product/delete/:id", function (req,resp) {
	var id=req.params.id;
	
		sqlhelper.pool.query('UPDATE products SET deleted=? WHERE id=? ',[1,id],function(err,rows,fields){
		if(err){
			console.log('Il y a une erreur'+err);	
			}
			else{
				resp.redirect("/admin/product/list.html");
				}		
	});
});


// route de update product
		//GET
router.get("/product/update/:id", function (req,resp) {
	var id=req.params.id;
	
	sqlhelper.pool.query('SELECT * FROM products WHERE products.id= ?',[id],function(err,rows,fields){
		if(err){
			console.log('Il y a une erreur'+err);	
			}
			else{
				products=rows;
				}		

	resp.render("admin/productitem.html.twig",{"products": rows});

	});
});

//route de update product
//POST

router.post("/product/update/:id", function (req,resp) {
	 var id=req.params.id;
	 var label = req.body.label;
	 var description = req.body.description;
	 var ref = req.body.ref;
	 var price = req.body.price;
	 var picture = req.body.picture;
	 var idvat = req.body.idvat;
	 var deleted = req.body.deleted;
	 var stock = req.body.stock;
	 var id=req.params.id;
	 
	 
	 console.log('VARIABLES'+id,label,description,ref,price,picture,idvat,deleted,stock);
	 
	sqlhelper.pool.query('UPDATE products SET label=?, description=?, ref=?, price=?, picture=?, idvat=?, deleted=?, stock=?   WHERE id=?',[label,description,ref,price,picture,idvat,deleted,stock,id],function(err,rows,fields){
		if(err){
			console.log('Il y a une erreur'+err);	
			}
			else{
				resp.redirect("/admin/product/list.html");
				}		
	});
});



//route de add product

router.get("/product/add", function (req,resp) {

	resp.render('admin/productitem.html.twig');

});

//POST


router.post("/product/add", function (req,resp) {
	var label = req.body.label;
	var description = req.body.description;
	var ref = req.body.ref;
	var price = req.body.price;
	var picture = req.body.picture;
	var idvat = req.body.idvat;
	var deleted = req.body.deleted;
	var stock = req.body.stock;
	sqlhelper.pool.query('INSERT INTO products (label,description,ref,price,picture,idvat,deleted,stock) VALUES (?,?,?,?,?,?,?,?)',[label,description,ref,price,picture,idvat,deleted,stock],function(err,rows,fields){
	
		if(err){
			console.log('Il y a une erreur'+err);	
			}
			else{
				resp.redirect("/admin/product/list.html");
				}	

});
});



//exportation du module
module.exports = router;
