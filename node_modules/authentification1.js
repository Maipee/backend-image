var passport = require('passport');
//pour la strategie 
var LS = require('passport-local').Strategy;
//on peut definir la strategie
passport.use('local-login', new LS(
    
//function qui va faire l'authentification
    function(username,password,done)
    {
        
        dbuser=null;
        //console.log('identification');
        //parcour le tablo un par un et enregistre dans record 
        for( var i=0 ; i<users.length ;i++)
        {
            
            //console.log('testing user from tab');
            if (username == users[i].username && password == users[i].password){
            
            //console.log('user finded');
            dbuser = users[i];
            } 
        }
        //si dbuser est differnet de nul alors renvoie les données par la fonction done qui a été recuperer juste avant
        if (dbuser != null)
        {
            //console.log('returning dbuser');
            return done (null,dbuser);
            
        }
        else{
            //console.log('returning nothing');
        return done (null,false,{'message':'Pas de user'})
        }
        
    }
));

var users=[
    {"id":"111","username":"toto","password":"toto","role":"ROLE_GUEST"},
    {"id":"222","username":"guest","password":"guest","role":"ROLE_GUEST"}
];
//on imite la recuperation dans la db des infos users
var dbuser = null;

//pour serilizer les donnés que l'on envoi par le login dans le net
// fonction done, qui est appelé au moment de la serialization
passport.serializeUser(function(user,done)
{
    //on execute la fonction done(), pour serailizer passport se base  sur id
done(null,dbuser.id);
});
//passport deserialize le retour des donnés
passport.deserializeUser(function(id,done){
done(null,dbuser);
});