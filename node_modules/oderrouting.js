var express = require('express');
var router = express.Router();
var sqlhelper = require('mysqlhelper2');
var cfg = require('config');




///////////////////////route "/admin/orders/list" ////////////////////////////////////////////////
router.get("/orders/list.html", function (req, resp) {
    sqlhelper.pool.query("SELECT * FROM `orders` WHERE `deleted`=0", function (err, rows, fields) {
        //on initialise un tableau dont le nom de la variable est egal à liste_produits, ainsi meme si on ne recupere rien à l'interieur a cause d'une erreur ou qu'il y ai rien dans la bdd
        //La page "/product/list.html" s'affichera toujours
        var liste_commandes={};
        //function qui renvoie une erreur si il y a un probleme
        // on verifie dans la console le valeur de err pour voir si il y a une erreur
        //console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            //message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            //console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            //message = "La recuperation des données c'est bien passé ";
            //on log pour voir le mesage si il passe
            //console.log('message bien reussi avec le message : ' + message);
            //console.log('Tous les produits: '+JSON.stringify(rows));
            liste_commandes = rows;
            //si le user enregistré en session est different de nul (loggé)
                if (typeof req.user !== 'undefined') {
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                    resp.render("admin/tables_order.html.twig", { "username": req.user.username, "orders": liste_commandes});
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }
            }  
    });
});

///////////////////////route "/admin/orders/list" ////////////////////////////////////////////////
router.post("/orders/list.html", function (req, resp) {


    var daterange = req.body.reservation;
    //on coupe la variable a deux endroits là ou se trouve les espaces (12/02/2016 - 13/03/2016) donc on recupere 3 elements dans le tableau dates
    var dates = daterange.split(" ");
    //on assigne la premiere valeur du tablo et la deuxiemme qui est 3
    var datedebut=dates[0];
    var datefin=dates[2];
    console.log('datedebut : '+datedebut+' datefin : '+datefin);
    //query pour la db
    var sql="SELECT * FROM `orders` WHERE `statusdate` BETWEEN STR_TO_DATE(?,'%m/%d/%Y') AND STR_TO_DATE(?,'%m/%d/%Y')";
    //Valeur pour securité
    var values=[datedebut,datefin];


    var liste_commandes={};
    sqlhelper.pool.query(sql,values, function (err, rows, fields) {
        //on initialise un tableau dont le nom de la variable est egal à liste_produits, ainsi meme si on ne recupere rien à l'interieur a cause d'une erreur ou qu'il y ai rien dans la bdd
        //La page "/product/list.html" s'affichera toujours
       
        //function qui renvoie une erreur si il y a un probleme
        // on verifie dans la console le valeur de err pour voir si il y a une erreur
        //console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            //message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            //console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            //message = "La recuperation des données c'est bien passé ";
            //on log pour voir le mesage si il passe
            //console.log('message bien reussi avec le message : ' + message);
            //console.log('Tous les produits: '+JSON.stringify(rows));
            liste_commandes = rows;
            //si le user enregistré en session est different de nul (loggé)
                if (typeof req.user !== 'undefined') {
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                    resp.render("admin/tables_order.html.twig", { "username": req.user.username, "orders": liste_commandes});
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }
            }  
    });
});



//exportation du module fin de admin 
module.exports = router;