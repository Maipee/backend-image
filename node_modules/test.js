///////////////////////route "/encoursclient/id" ////////////////////////////////////////////////
router.get("/encoursclient/:id&:qto&:idp", function (req, resp) {
    var messageService;
    //id de la commande
    var id = req.params.id;
    // quantité de la commande
    var qto = req.params.qto;
    //id du produit
    var idp = req.params.idp;
    //quantité en stock dans le magasin
    var qtm;
    //quantité en stock dans l'entrepot
    var qte;
    //on verifie la recuperation des données
    //console.log("Debut : ######## -> id : "+id+" quantite : "+qto+" id product : "+idp);
     //--------------------------------------------------------------------------------------------
     //On change le status de la commande en livré - par cette action il decoule toute la gestion des stocks magasin et entrepot 
     sqlhelper.pool.query("UPDATE `orders` SET `status` = 'livré' WHERE `orders`.`id` = ?;",[id], function (err, rows, fields) {

        console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur
            //message = "Il y a eu une erreur dans la query pour le changement de status (livré)";
            //on log pour voir le mesage si il passe
            //console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            //message = "La mise à jours des données pour le status livré de la commande :"+id+" c'est bien passé ";
            //on log pour voir le mesage si il passe
            //console.log('message bien reussi : ' + message);
            //console.log('Tous les produits: '+JSON.stringify(rows));

            //--------------------------------------------------------------------------------------------
            //on recupere les infos du produits 
            sqlhelper.pool.query("SELECT * FROM `products` WHERE `id` = ?",[idp], function (err, rows, fields) {
                //console.log('Tous le produit: '+JSON.stringify(rows));
                //on recupere dans la variable qtm le stock magasin
                qtm = rows[0].stock;
                //console.log('------------------ !!! -------- > Stock magasin : ' + qtm);
                //on recupere dans la variable qte le stock entrepot
                qte = rows[0].stockEntrepot;
                //console.log('------------------ !!! -------- > Stock Entrepot : ' + qte);
                //si il y a une erreur donc si la valeur err est differente de null
                if (err != null) {
                    //on enregistre le message d'erreur'
                    //message = "Il y a eu une erreur dans la query";
                    //on log pour voir le mesage si il passe
                    //console.log(message + ' ----- ' + err);
                }
                else {
                         //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                        //message = "la recuperation des donnés du produit :"+idp+" c'est bien passé ";
                        //on log pour voir le mesage si il passe
                        //console.log('message bien reussi : ' + message);
                        //console.log('Tous les produits: '+JSON.stringify(rows));
                }
                //--------------------------------------------------------------------------------------------
                //--------------------------------------------------------------------------------------------
                //--------------------------------------------------------------------------------------------
                //si la quntité du magasin est plus petite que 20 alors :    
                if (qtm<20) {
                         //--------------------------------------------------------------------------------------------
                        //--------------------------------------------------------------------------------------------
                        //on verifie si la quantité de l'entrepot est plus petite de 50 alors :
                        if(qte<50){
                            //alors on envoie un mail au fournisseur pour recuperer 100 unité du produit en question
                            var transporter = mailer.createTransport('smtps://'+cfg.MAIL.smtpuser+'%40gmail.com:'+cfg.MAIL.smtppassword+'@smtp.gmail.com');
                            var mailoptions ={
                                    //l'envoyeur
                                    from :"webmbeaucaire@gmail.com",
                                    //recever
                                    to :"webmbeaucaire@gmail.com",
                                    //sujet du message
                                    Subject :"Demande de commande du produit xxxxx ",
                                    //format texte
                                    text :"Bonjour, par la presente nous vous commendons 100 unité du produit : XXXXX, pour le plus vite possible, merci. M le President de la rose du futur",
                                    //format html
                                    html :"<p>Bonjour, par la presente nous vous commendons 100 unité du produit : XXXXX, pour le plus vite possible, merci. M le President de la rose du futur </p>"
                                    //option obligatoire sinon il ne marche pas
                            }
                            transporter.sendMail(mailoptions,function(err,info){
                                //si j'ai une erreur je l'ecris dans la console le return permet de sortir de la fonction et de ne pas afficher le suivant
                                if(err) return console.log(err);
                                console.log('Message Email bien envoyé au fournisseur !'); 
                            });
                            messageService ="A cause d'une quantité insufisante pour le produit : "+idp+" le systeme a envoyé un email au fournisseur pour passer commande de 100 unités de plus";
                            //on ferme la connexion smtp
                            transporter.close();


                            //alors on envoie un mail au fournisseur pour recuperer 100 unité du produit en question
                            var transporter = mailer.createTransport('smtps://'+cfg.MAIL.smtpuser+'%40gmail.com:'+cfg.MAIL.smtppassword+'@smtp.gmail.com');
                            var mailoptions ={
                                    //l'envoyeur
                                    from :"webmbeaucaire@gmail.com",
                                    //recever
                                    to :"webmbeaucaire@gmail.com",
                                    //sujet du message
                                    Subject :"Commande du produit xxxxx envoyer au prestaire apres depassement du cotas autorisé ! ",
                                    //format texte
                                    text :"Bonjour, le systeme vient d'envoyer un email au fournisseur pour commander le produit qui a depasser les cotas minimum, bientot vous recevrez le retour du prestaire, merci",
                                    //format html
                                    html :"<p>Bonjour, le systeme vient d'envoyer un email au fournisseur pour commander le produit qui a depasser les cotas minimum, bientot vous recevrez le retour du prestaire, merci </p>"
                                    //option obligatoire sinon il ne marche pas
                            }
                            transporter.sendMail(mailoptions,function(err,info){
                                //si j'ai une erreur je l'ecris dans la console le return permet de sortir de la fonction et de ne pas afficher le suivant
                                if(err) return console.log(err);
                                console.log('Message Email bien envoyé au fournisseur !'); 
                            });
                            messageService ="A cause d'une quantité insufisante pour le produit : "+idp+" le systeme a envoyé un email au fournisseur pour passer commande de 100 unités de plus";
                            //on ferme la connexion smtp
                            transporter.close();

                        }
                        //--------------------------------------------------------------------------------------------
                        //--------------------------------------------------------------------------------------------

                        
                        //sinon
                        else{
                            console.log("Nous avons mis le systeme à jours basculant 20 unités (en base de données) du produit "+idp+"de l'entrepot vers le magasins, veuillez suivre la procedure physiquement, merci");
                        //--------------------------------------------------------------------------------------------
                        //--------------------------------------------------------------------------------------------
                            //on enleve 20 quantie de l'entrepot et on les bascules dans le magasin
                            messageService ="Nous avons mis le systeme à jours basculant 20 unités (en base de données) du produit "+idp+"de l'entrepot vers le magasins, veuillez suivre la procedure physiquement, merci";
                            var qtm2=qtm+20;
                            var qte2=qte-20;
                            //UPDATE `products` SET `stock` = '21', `stockEntrepot` = '100' WHERE `products`.`id` = 11; 
                            sqlhelper.pool.query("UPDATE `products` SET `stock` = ?, `stockEntrepot` = ? WHERE `products`.`id` = ?;",[qtm2,qte2,idp], function (err, rows, fields) {
                                //function qui renvoie une erreur si il y a un probleme
                                // on verifie dans la console le valeur de err pour voir si il y a une erreur
                                console.log("Update qunatite :");
                                console.log("err :" + err);
                                //si il y a une erreur donc si la valeur err est differente de null
                                if (err != null) {
                                    //on enregistre le message d'erreur'
                                    message = "Il y a eu une erreur dans la query";
                                    //on log pour voir le mesage si il passe
                                    console.log(message + ' ----- ' + err);

                                }
                                else {
                                        //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                                        message = "La mise à jours de la nouvelle quantité ("+qto+") du produit :"+idp+" c'est bien passé ";
                                        //on log pour voir le mesage si il passe
                                        console.log('message bien reussi : ' + message);
                                        //console.log('Tous les produits: '+JSON.stringify(rows));

                                }
                            });                                                                 
                            console.log('on enleve 20 quantie de l\'entrepot et on les bascules dans le magasin'); 
                        }
                         //--------------------------------------------------------------------------------------------
                        //--------------------------------------------------------------------------------------------
            }
            else{               
                var qtm2 = qtm-qto;
                //UPDATE `products` SET `stock` = '50' WHERE `products`.`id` = 20; 
                sqlhelper.pool.query("UPDATE `products` SET `stock` = ? WHERE `products`.`id` = ?;",[qtm2,idp], function (err, rows, fields) {
                                //function qui renvoie une erreur si il y a un probleme
                                // on verifie dans la console le valeur de err pour voir si il y a une erreur
                                console.log("Update qunatite :");
                                console.log("err :" + err);
                                //si il y a une erreur donc si la valeur err est differente de null
                                if (err != null) {
                                    //on enregistre le message d'erreur'
                                    message = "Il y a eu une erreur dans la query";
                                    //on log pour voir le mesage si il passe
                                    console.log(message + ' ----- ' + err);
                                }
                                else {
                                        //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                                        messageService = "La mise à jours de la nouvelle quantité ("+qto+") du produit :"+idp+" c'est bien passé ";
                                        //on log pour voir le mesage si il passe
                                        console.log('message bien reussi : ' + message);
                                        //console.log('Tous les produits: '+JSON.stringify(rows));
                                }
                          });  
                }
                console.log("Nous avons mis le systeme à jours basculant "+qto+" unité(s) (en base de données) du produit "+idp+" pour les stocks magasins, merci");
                messageService ="Nous avons mis le systeme à jours basculant "+qto+" unité(s) (en base de données) du produit "+idp+" pour les stocks magasins, merci";
            });
             //si le user enregistré en session est different de nul (typeof verifi le type de donné)
                if (typeof req.user !== 'undefined') {
                    messageService ="Nous avons mis le systeme à jours basculant "+qto+" unité(s) (en base de données) du produit "+idp+" pour les stocks magasins, merci";
                    console.log('message data envant envoie : '+messageService);
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                   resp.status(200).end('',messageService);                
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }

            }  
    });
});