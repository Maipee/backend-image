var express = require('express');
var router = express.Router();
var sqlhelper = require('mysqlhelper2');
var cfg = require('config');
var mailer = require('nodemailer');

///////////////////////route "/admin/orders/list" ////////////////////////////////////////////////
router.get("/stockorder/list.html",isAdmin,function (req, resp) {
    sqlhelper.pool.query("SELECT * FROM `stock`", function (err, rows, fields) {
        //on initialise un tableau dont le nom de la variable est egal à liste_produits, ainsi meme si on ne recupere rien à l'interieur a cause d'une erreur ou qu'il y ai rien dans la bdd
        //La page "/product/list.html" s'affichera toujours
        var liste_commandes={};
        //function qui renvoie une erreur si il y a un probleme
        // on verifie dans la console le valeur de err pour voir si il y a une erreur
        //console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            message = "La recuperation des données c'est bien passé ";
            //on log pour voir le mesage si il passe
            console.log('message bien reussi avec le message : ' + message);
            console.log('Tous les produits: '+JSON.stringify(rows));
            liste_commandes = rows;
            //si le user enregistré en session est different de nul (loggé)
                if (typeof req.user !== 'undefined') {
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                    resp.render("admin/tables_supplyorder.html.twig", { "username": req.user.username, "orders": liste_commandes});
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }
            }  
    });
});


///////////////////////route "admin/stockt/management.html" ////////////////////////////////////////////////
router.get("/stockt/management.html",isAdmin, function (req, resp) {


    //SELECT products.id, products.label, products.stock, stock.idproduct, stock.qte, stock.idsupplier FROM products, stock WHERE products.id = stock.idproduct GROUP BY products.id 
    sqlhelper.pool.query("SELECT products.id, products.label, products.stock, stock.qty, stock.idsupplier FROM products, stock WHERE products.id = stock.idproduct group by products.id, stock.qty, stock.idsupplier  ", function (err, rows, fields) {
        //on initialise un tableau dont le nom de la variable est egal à liste_produits, ainsi meme si on ne recupere rien à l'interieur a cause d'une erreur ou qu'il y ai rien dans la bdd
        //La page "/product/list.html" s'affichera toujours
        var liste_commandes={};
        //function qui renvoie une erreur si il y a un probleme
        // on verifie dans la console le valeur de err pour voir si il y a une erreur
        //console.log("err :" + err);
        //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            console.log(message + ' ----- ' + err);
        }
        else {
            //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
            message = "La recuperation des données c'est bien passé ";
            //on log pour voir le mesage si il passe
            console.log('message bien reussi avec le message : ' + message);
            console.log('Tous les produits: '+JSON.stringify(rows));
            liste_commandes = rows;
            //si le user enregistré en session est different de nul (loggé)
                if (typeof req.user !== 'undefined') {
                    //alors je renvoie le twig avec un tablo qui recupere les elements de username
                    resp.render("admin/tables_entrepot.html.twig", { "username": req.user.username, "stocks": liste_commandes});
                }
                //sinon je renvoie le user a la page login pour authentification
                else {
                    resp.redirect("/login.html");
                }
            }  
    });
});

///////////////////////route "admin/stock/moidif/:id" ////////////////////////////////////////////////admin/stock/moidif/5
router.post("/stock/moidif/:id",isAdmin, function (req, resp) {

    var id = req.params.id;
    var qty_m = req.body.st_m;
    var qty_e = req.body.st_e;
    var message;
    console.log("id = "+id+" quantite magasin = "+qty_m+"  quantite entrepot = "+qty_e);

    
    //UPDATE `products` SET `stock` = '15' WHERE `products`.`id` = 6;
    sqlhelper.pool.query("UPDATE `products` SET `stock` = ? WHERE `products`.`id` =? ",[qty_m,id], function (err, rows, fields) {
        
            //function qui renvoie une erreur si il y a un probleme
            // on verifie dans la console le valeur de err pour voir si il y a une erreur
            //console.log("err :" + err);
            //si il y a une erreur donc si la valeur err est differente de null
        if (err != null) {
            //on enregistre le message d'erreur'
            //message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            //console.log(message + ' ----- ' + err);
        }
        else {      
            //UPDATE `stock` SET `qty` = '10' WHERE `stock`.`id` = 5 
            sqlhelper.pool.query("UPDATE `stock` SET `qty` = ? WHERE `stock`.`id` = ? ",[qty_e,id], function (err, rows, fields) {

                            if (err != null) {
                                //on enregistre le message d'erreur'
                                //message = "Il y a eu une erreur dans la query";
                                //on log pour voir le mesage si il passe
                                //console.log(message + ' ----- ' + err);

                            }
                            else {
                                    if (qty_e <= 0)
                                        {
                                                //message="La quantité de l'entrepot vient de depasser la limite, un mail vient d'etre generer automatiquement vers le fournisseur pour passer commande";
                                               //alors on envoie un mail au fournisseur pour recuperer 100 unité du produit en question
                                                var transporter = mailer.createTransport('smtps://'+cfg.MAIL.smtpuser+'%40gmail.com:'+cfg.MAIL.smtppassword+'@smtp.gmail.com');
                                                var mailoptions ={
                                                        //l'envoyeur
                                                        from :"cyril.maipee@gmail.com",
                                                        //recever
                                                        to :"cyril.maipee@gmail.com",
                                                        //sujet du message
                                                        Subject :"Demande de commande du produit xxxxx ",
                                                        //format texte
                                                        text :"Bonjour, par la presente nous vous commendons 100 unité du produit : XXXXX, pour le plus vite possible, merci. M le President ",
                                                        //format html
                                                        html :"<p>Bonjour, par la presente nous vous commendons 100 unité du produit : XXXXX, pour le plus vite possible, merci. M le President</p>"
                                                        //option obligatoire sinon il ne marche pas
                                                }
                                                transporter.sendMail(mailoptions,function(err,info){
                                                    //si j'ai une erreur je l'ecris dans la console le return permet de sortir de la fonction et de ne pas afficher le suivant
                                                    if(err) return console.log(err);
                                                    console.log('Message Email bien envoyé au fournisseur !'); 
                                                });
                                                messageService ="A cause d'une quantité insufisante pour le produit :  14 le systeme a envoyé un email au fournisseur pour passer commande de 100 unités de plus";
                                                //on ferme la connexion smtp
                                                transporter.close(); 

                                        }
                                        else if (qty_m <= 5)
                                        {
                                        
                                        //message="La quantité du produit ( id= "+id+" ) du magasin vient de depasser la limite, veuillez recuperer du stock de l'entrepot";


                                        }

                                //sinon il n'y a pas d'erreur donc on ajoute la nouvelle valeur au message
                                //message = "La recuperation des données c'est bien passé ";
                                //on log pour voir le mesage si il passe
                                //console.log('message bien reussi avec le message : ' + message);
                                
                                resp.redirect("/admin/stockt/management.html");

                            }

                    });      
            }  
    });
});



///stock/transfer/{{ st.id }}
///////////////////////route "admin/stock/moidif/:id" ////////////////////////////////////////////////admin/stock/moidif/5
router.get("/stock/transfer/:id/:qt",isAdmin, function (req, resp) {
    var id = req.params.id;
    var qt = parseInt(req.params.qt);
    //console.log("id = "+id+" quantite = "+qt);
    // SELECT products.stock, stock.qty FROM products, stock WHERE products.id = stock.idproduct group by products.id, stock.qty
    sqlhelper.pool.query("SELECT products.stock, stock.qty FROM products, stock WHERE products.id = stock.idproduct AND products.id = ? ",[id], function (err, rows, fields) {
       //console.log('rows : '+JSON.stringify(rows));
        var qutm = parseInt(rows[0].stock);
        var qute = parseInt(rows[0].qty);
        console.log("qutm = "+qutm+" qute  = "+qute );
        var newqute =qute-qt;
        var newqutm=qutm+qt;
        console.log("nouvelle quantite magasin : "+newqutm);
        console.log("nouvelle quantite entrepot : "+newqute);
        
        if (err != null) {
            //on enregistre le message d'erreur'
            message = "Il y a eu une erreur dans la query";
            //on log pour voir le mesage si il passe
            console.log(message + ' ----- ' + err);
        }
        else {      
                sqlhelper.pool.query("UPDATE `products` SET `stock` = ? WHERE `products`.`id` =? ",[newqutm,id], function (err, rows, fields) {

                        if (err != null) {
                        //on enregistre le message d'erreur'
                        message = "Il y a eu une erreur dans la query";
                        //on log pour voir le mesage si il passe
                        console.log(message + ' ----- ' + err);
                        }
                        else { 
                                //UPDATE `stock` SET `qty` = ? WHERE `stock`.`id` = ? 
                                sqlhelper.pool.query("UPDATE `stock` SET `qty` = ? WHERE `stock`.`id` = ?  ",[newqute,id], function (err, rows, fields) {


                                        if (err != null) {
                                //on enregistre le message d'erreur'
                                message = "Il y a eu une erreur dans la query";
                                //on log pour voir le mesage si il passe
                                console.log(message + ' ----- ' + err);
                                }
                                else { 

                                             if (newqute <= 0)
                                        {
                                               //alors on envoie un mail au fournisseur pour recuperer 100 unités du produit en question
                                                var transporter = mailer.createTransport('smtps://'+cfg.MAIL.smtpuser+'%40gmail.com:'+cfg.MAIL.smtppassword+'@smtp.gmail.com');
                                                var mailoptions ={
                                                        //l'envoyeur
                                                        from :"cyril.maipee@gmail.com",
                                                        //recever
                                                        to :"cyril.maipee@gmail.com",
                                                        //sujet du message
                                                        Subject :"Demande de commande du produit YYYYYT ",
                                                        //format texte
                                                        text :"Bonjour, par la presente nous vous commendons 100 unité du produit : YYYYYT, pour le plus vite possible, merci. M le President ",
                                                        //format html
                                                        html :"<p>Bonjour, par la presente nous vous commendons 100 unité du produit : YYYYYT, pour le plus vite possible, merci. M le President</p>"
                                                        //option obligatoire sinon il ne marche pas
                                                }
                                                transporter.sendMail(mailoptions,function(err,info){
                                                    //si j'ai une erreur je l'ecris dans la console le return permet de sortir de la fonction et de ne pas afficher le suivant
                                                    if(err) return console.log(err);
                                                    console.log('Message Email bien envoyé au fournisseur !'); 
                                                });
                                                messageService ="A cause d'une quantité insufisante pour le produit :  14 le systeme a envoyé un email au fournisseur pour passer commande de 100 unités de plus";
                                                //on ferme la connexion smtp
                                                transporter.close(); 

                                        }
                                      resp.redirect("/admin/stockt/management.html");
                                	}
                             });       
                        }
                });
        }
    });
});

function isAdmin(req,resp,next){
	if(typeof req.user!='undefined')
	{if(req.user.role=='ROLE_ADMIN')
		//next : passe à la function suivante
		{next()}}
	resp.redirect('/admin/login.html');
	}

//exportation du module fin de admin 
module.exports = router;